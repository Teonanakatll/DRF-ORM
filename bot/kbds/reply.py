from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, KeyboardButtonPollType
from aiogram.utils.keyboard import ReplyKeyboardBuilder

from gpt4.utils import cons


############   CallbackQuery ‚Äî —ç—Ç–æ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –±–æ—Ç—É, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É —Å
# ##########   callback_data –≤ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ.


def get_keyboard(
        *btns: str,
        placeholder: str = None,
        request_contact: int = None,
        request_location: int = None,
        sizes: tuple[int] = (2,),
    ):

    '''
    Parameters request_contact and request_location must be as indexes of btns args for for buttons you need
    Example:
    get_keyboard(
        '–ú–µ–Ω—é',
        '–û –º–∞–≥–∞–∑–∏–Ω–µ',
        '–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã',
        '–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏',
        '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
        placeholder='–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç',

        —ç—Ç–æ—Ç –∏–Ω–¥–µ–∫—Å —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –∏–Ω–¥–µ–∫—Å 5-–æ–π –∫–Ω–æ–ø–∫–∏ '–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', –¥–ª—è contact/location –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
        —É–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∫ –∫–Ω–æ–ø–∫–µ –º–æ–∂–Ω–æ –±—ã–ª–æ —É–∫–∞–∑–∞—Ç—å –±—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏ –æ–±—å—è–≤–ª–µ–Ω–∏–∏
        request_contact=4,
        size=(2, 2, 1)
    )
    '''

    keyboard = ReplyKeyboardBuilder()
    # cons('keyboard')
    for index, text in enumerate(btns, start=0):
        if request_contact and request_contact == index:
            keyboard.add(KeyboardButton(text=text, request_contact=True))

        elif request_location and request_location == index:
            keyboard.add(KeyboardButton(text=text, request_location=True))
        else:
            keyboard.add(KeyboardButton(text=text))

    return keyboard.adjust(*sizes).as_markup(
        resize_keyboard=True, input_field_placeholder=placeholder
    )

start_kb = ReplyKeyboardMarkup(
    # –æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    keyboard=[
        [
          KeyboardButton(text='–ú–µ–Ω—é'),
          KeyboardButton(text='–û –º–∞–≥–∞–∑–∏–Ω–µ'),
        ],
        [
            KeyboardButton(text='–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏'),
            KeyboardButton(text='–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã'),
        ]
    ],
    resize_keyboard=True,
    # –ø–æ–¥—Å–∫–∞–∑–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–∞—è –≤ —Å—Ç—Ä–æ–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    input_field_placeholder='–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?'
)

# —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
del_kbd = ReplyKeyboardRemove()


start_kb2 = ReplyKeyboardBuilder()
start_kb2.add(
    KeyboardButton(text='–ú–µ–Ω—é'),
    KeyboardButton(text='–û –º–∞–≥–∞–∑–∏–Ω–µ'),
    KeyboardButton(text='–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏'),
    KeyboardButton(text='–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã'),
)
# —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—è–¥–æ–≤ –∏ –∫–Ω–æ–ø–æ–∫
start_kb2.adjust(2, 2)

start_kb3 = ReplyKeyboardBuilder()
start_kb3.attach(start_kb2)                              # attach() - —Ä–∞—Å—à–∏—Ä—è–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
start_kb3.row(KeyboardButton(text='–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤'))     # row() - –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–æ–≤—ã–º —Ä—è–¥–æ–º
# –ø–æ–¥–∫–ª—é—á–∞–µ–º –Ω–æ–ø–∫—É –Ω–∞ –Ω–∏–∂–Ω—é—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –∫–æ—Ç–æ—Ä–∞—è
start_kb3.row()

test_kb = ReplyKeyboardMarkup(
    keyboard=[
    [
        KeyboardButton(text='–°–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å', request_poll=KeyboardButtonPollType()),
    ],
    [
        KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä üì±', request_contact=True),
        KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é ‚¨á üíé', request_location=True),
    ],

], resize_keyboard=True, input_field_placeholder='–ú–µ–Ω—é –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤')
